/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as NaniesIndexImport } from './routes/nanies/index'
import { Route as MaidsIndexImport } from './routes/maids/index'
import { Route as DriversIndexImport } from './routes/drivers/index'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const NaniesIndexRoute = NaniesIndexImport.update({
  id: '/nanies/',
  path: '/nanies/',
  getParentRoute: () => rootRoute,
} as any)

const MaidsIndexRoute = MaidsIndexImport.update({
  id: '/maids/',
  path: '/maids/',
  getParentRoute: () => rootRoute,
} as any)

const DriversIndexRoute = DriversIndexImport.update({
  id: '/drivers/',
  path: '/drivers/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/drivers/': {
      id: '/drivers/'
      path: '/drivers'
      fullPath: '/drivers'
      preLoaderRoute: typeof DriversIndexImport
      parentRoute: typeof rootRoute
    }
    '/maids/': {
      id: '/maids/'
      path: '/maids'
      fullPath: '/maids'
      preLoaderRoute: typeof MaidsIndexImport
      parentRoute: typeof rootRoute
    }
    '/nanies/': {
      id: '/nanies/'
      path: '/nanies'
      fullPath: '/nanies'
      preLoaderRoute: typeof NaniesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/drivers': typeof DriversIndexRoute
  '/maids': typeof MaidsIndexRoute
  '/nanies': typeof NaniesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/drivers': typeof DriversIndexRoute
  '/maids': typeof MaidsIndexRoute
  '/nanies': typeof NaniesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/drivers/': typeof DriversIndexRoute
  '/maids/': typeof MaidsIndexRoute
  '/nanies/': typeof NaniesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/drivers' | '/maids' | '/nanies'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/drivers' | '/maids' | '/nanies'
  id: '__root__' | '/' | '/about' | '/drivers/' | '/maids/' | '/nanies/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  DriversIndexRoute: typeof DriversIndexRoute
  MaidsIndexRoute: typeof MaidsIndexRoute
  NaniesIndexRoute: typeof NaniesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  DriversIndexRoute: DriversIndexRoute,
  MaidsIndexRoute: MaidsIndexRoute,
  NaniesIndexRoute: NaniesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/drivers/",
        "/maids/",
        "/nanies/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/drivers/": {
      "filePath": "drivers/index.tsx"
    },
    "/maids/": {
      "filePath": "maids/index.tsx"
    },
    "/nanies/": {
      "filePath": "nanies/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
